{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","style","marginRight","placeholder","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","map","currentValue","slice","join","document","getElementById","select","navigator","clipboard","writeText","length","prototypes","PropTypes","string","isRequired","aboutText","defaultProps","Alert","alert","word","lower","charAt","captalized","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.131a99f3.chunk.js","sourcesContent":["import React from 'react'\r\n import PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    <form className=\"d-flex\" style={{marginRight:'50px'}}>\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form>\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set Title\",\r\n    aboutText: \"About Us\"\r\n}","import React, { useState } from 'react'\r\nimport '../App.css'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpChange = () => {\r\n        // console.log(\"On Click is worked. \"+ text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted into UPPERCASE\",\"success\");\r\n    }\r\n    const handleLwChange =()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted into lowercase\",\"danger\");\r\n    }\r\n    const handleTcChange=()=>{\r\n        let newText = text.split(\" \").map((currentValue)=>{\r\n            let newText = currentValue[0].toUpperCase() + currentValue.slice(1);\r\n            return newText;\r\n        })\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Converted into Title-Case\",\"info\");\r\n    }\r\n    const handleCopy=()=>{\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        // text.setSelectionRange(0,9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied\",\"warning\");\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Space has been removed\",\"primary\");\r\n\r\n    }\r\n    const handleReset = (event)=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Reset\",\"dark\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change is worked..\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    const [text, setText] = useState(\"\");\r\n    // text = \"New Text\"; //wrong method to change state\r\n    // setText(\"new Text\"); //correct method to change state\r\n    return (\r\n        <div>\r\n            <div className='container' style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#042743':'white', color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\" placeholder='Enter Text Here...'></textarea>\r\n                </div>\r\n                <button className=\"btn btn-success mx-1\" onClick={handleUpChange}>Convert To UPPERCASE</button>\r\n                <button className=\"btn btn-danger mx-1\" onClick={handleLwChange}>Convert To lowercase</button>\r\n                <button className=\"btn btn-info mx-1\" onClick={handleTcChange}>Convert To Title Case</button>\r\n                <button className=\"btn btn-warning mx-1\" onClick={handleCopy}>CopyText</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Rmove Extra Spaces</button>\r\n                <button className=\"btn btn-dark mx-1\" onClick={handleReset}>ResetText</button>\r\n            </div>\r\n            \r\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <h6>Your Text Summary have:- {text.split(\" \").length} Words and {text.length} character</h6>\r\n                <p>And {0.008 * text.split(\" \").length} Minutes take for Reading this Preview </p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter Something in the text Box above to preview it here\"}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const captalized =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{captalized (props.alert.type)}</strong>: {props.alert.msg}\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n\r\n    \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","//import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react'\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\nfunction App() {\n    const [mode, setMode] = useState('light');//whether dark mode is on/off\n    const [alert, setAlert] = useState(null);\n\n    const showAlert = (message, type) => {\n        setAlert({\n            msg: message,\n            type: type,\n        })\n        setTimeout(() => {\n            setAlert(null);\n        }, 1500);\n    }\n\n\n    const toggleMode = () => {\n        if (mode === 'light') {\n            setMode('dark');\n            document.body.style.backgroundColor = '#042743';\n            showAlert(\"Dark Mode has been ON\", \"success\");\n            document.title = \"TextUtils-DarkMode\";\n            // setInterval(() => {\n            //     document.title=\"TextUtils is amazing app\";\n            // }, 2000);\n            // setInterval(() => {\n            //     document.title=\"install this amazing app\";\n            // }, 1500);\n        }\n        else {\n            setMode('light');\n            document.body.style.backgroundColor = 'white';\n            showAlert(\"Light Mode has been On\", \"success\");\n            document.title = \"TextUtils-LightMode\";\n        }\n    }\n    return (\n        //<Router>\n            <div>\n                <Navbar title=\"React Text Utils\" mode={mode} toggleMode={toggleMode} />\n                <Alert alert={alert} />\n                {/* <Navbar/> */}\n                <div className=\"container\">\n                    {/* <Switch>\n                        <Route exact path=\"/about\">\n                            <About />\n                        </Route>\n                        <Route exact path=\"/\"> */}\n                            <TextForm showAlert={showAlert} heading=\"Enter The Text To Analyze\" mode={mode} />\n                        {/* </Route>\n                    </Switch> */}\n                </div>\n            </div>\n        //</Router>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}